// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: proto/container.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetContainersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	All           bool                   `protobuf:"varint,1,opt,name=all,proto3" json:"all,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainersRequest) Reset() {
	*x = GetContainersRequest{}
	mi := &file_proto_container_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainersRequest) ProtoMessage() {}

func (x *GetContainersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainersRequest.ProtoReflect.Descriptor instead.
func (*GetContainersRequest) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{0}
}

func (x *GetContainersRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *GetContainersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetContainerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Names         []string               `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	Image         string                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	State         string                 `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Ports         []string               `protobuf:"bytes,6,rep,name=ports,proto3" json:"ports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerResponse) Reset() {
	*x = GetContainerResponse{}
	mi := &file_proto_container_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerResponse) ProtoMessage() {}

func (x *GetContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerResponse.ProtoReflect.Descriptor instead.
func (*GetContainerResponse) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{1}
}

func (x *GetContainerResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetContainerResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *GetContainerResponse) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *GetContainerResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GetContainerResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetContainerResponse) GetPorts() []string {
	if x != nil {
		return x.Ports
	}
	return nil
}

type GetContainersResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Containers    []*GetContainerResponse `protobuf:"bytes,1,rep,name=containers,proto3" json:"containers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainersResponse) Reset() {
	*x = GetContainersResponse{}
	mi := &file_proto_container_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainersResponse) ProtoMessage() {}

func (x *GetContainersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainersResponse.ProtoReflect.Descriptor instead.
func (*GetContainersResponse) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{2}
}

func (x *GetContainersResponse) GetContainers() []*GetContainerResponse {
	if x != nil {
		return x.Containers
	}
	return nil
}

type GetContainerDetailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerDetailsRequest) Reset() {
	*x = GetContainerDetailsRequest{}
	mi := &file_proto_container_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerDetailsRequest) ProtoMessage() {}

func (x *GetContainerDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetContainerDetailsRequest) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{3}
}

func (x *GetContainerDetailsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetContainerDetailsResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Id            string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Created       string                      `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	Image         string                      `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Status        string                      `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	State         string                      `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	Mounts        []*MountPoint               `protobuf:"bytes,7,rep,name=mounts,proto3" json:"mounts,omitempty"`
	Networks      map[string]*NetworkSettings `protobuf:"bytes,8,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerDetailsResponse) Reset() {
	*x = GetContainerDetailsResponse{}
	mi := &file_proto_container_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerDetailsResponse) ProtoMessage() {}

func (x *GetContainerDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetContainerDetailsResponse) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{4}
}

func (x *GetContainerDetailsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetContainerDetailsResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetContainerDetailsResponse) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *GetContainerDetailsResponse) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *GetContainerDetailsResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetContainerDetailsResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GetContainerDetailsResponse) GetMounts() []*MountPoint {
	if x != nil {
		return x.Mounts
	}
	return nil
}

func (x *GetContainerDetailsResponse) GetNetworks() map[string]*NetworkSettings {
	if x != nil {
		return x.Networks
	}
	return nil
}

type MountPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Source        string                 `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Destination   string                 `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	Rw            bool                   `protobuf:"varint,3,opt,name=rw,proto3" json:"rw,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MountPoint) Reset() {
	*x = MountPoint{}
	mi := &file_proto_container_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MountPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountPoint) ProtoMessage() {}

func (x *MountPoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountPoint.ProtoReflect.Descriptor instead.
func (*MountPoint) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{5}
}

func (x *MountPoint) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *MountPoint) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *MountPoint) GetRw() bool {
	if x != nil {
		return x.Rw
	}
	return false
}

type NetworkSettings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NetworkId     string                 `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	IpAddress     string                 `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Gateway       string                 `protobuf:"bytes,3,opt,name=gateway,proto3" json:"gateway,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkSettings) Reset() {
	*x = NetworkSettings{}
	mi := &file_proto_container_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkSettings) ProtoMessage() {}

func (x *NetworkSettings) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkSettings.ProtoReflect.Descriptor instead.
func (*NetworkSettings) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{6}
}

func (x *NetworkSettings) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *NetworkSettings) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *NetworkSettings) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

type GetContainerLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Follow        bool                   `protobuf:"varint,2,opt,name=follow,proto3" json:"follow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerLogsRequest) Reset() {
	*x = GetContainerLogsRequest{}
	mi := &file_proto_container_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerLogsRequest) ProtoMessage() {}

func (x *GetContainerLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerLogsRequest.ProtoReflect.Descriptor instead.
func (*GetContainerLogsRequest) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{7}
}

func (x *GetContainerLogsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetContainerLogsRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

type GetContainerLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunk         []byte                 `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerLogsResponse) Reset() {
	*x = GetContainerLogsResponse{}
	mi := &file_proto_container_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerLogsResponse) ProtoMessage() {}

func (x *GetContainerLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerLogsResponse.ProtoReflect.Descriptor instead.
func (*GetContainerLogsResponse) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{8}
}

func (x *GetContainerLogsResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type GetContainerStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Stream        bool                   `protobuf:"varint,2,opt,name=stream,proto3" json:"stream,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerStatsRequest) Reset() {
	*x = GetContainerStatsRequest{}
	mi := &file_proto_container_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerStatsRequest) ProtoMessage() {}

func (x *GetContainerStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerStatsRequest.ProtoReflect.Descriptor instead.
func (*GetContainerStatsRequest) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{9}
}

func (x *GetContainerStatsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetContainerStatsRequest) GetStream() bool {
	if x != nil {
		return x.Stream
	}
	return false
}

type GetContainerStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CpuUsage      uint64                 `protobuf:"varint,2,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemUsage      uint64                 `protobuf:"varint,3,opt,name=mem_usage,json=memUsage,proto3" json:"mem_usage,omitempty"`
	MemLimit      uint64                 `protobuf:"varint,4,opt,name=mem_limit,json=memLimit,proto3" json:"mem_limit,omitempty"`
	NetInput      uint64                 `protobuf:"varint,5,opt,name=net_input,json=netInput,proto3" json:"net_input,omitempty"`
	NetOutput     uint64                 `protobuf:"varint,6,opt,name=net_output,json=netOutput,proto3" json:"net_output,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerStatsResponse) Reset() {
	*x = GetContainerStatsResponse{}
	mi := &file_proto_container_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerStatsResponse) ProtoMessage() {}

func (x *GetContainerStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerStatsResponse.ProtoReflect.Descriptor instead.
func (*GetContainerStatsResponse) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{10}
}

func (x *GetContainerStatsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetContainerStatsResponse) GetCpuUsage() uint64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *GetContainerStatsResponse) GetMemUsage() uint64 {
	if x != nil {
		return x.MemUsage
	}
	return 0
}

func (x *GetContainerStatsResponse) GetMemLimit() uint64 {
	if x != nil {
		return x.MemLimit
	}
	return 0
}

func (x *GetContainerStatsResponse) GetNetInput() uint64 {
	if x != nil {
		return x.NetInput
	}
	return 0
}

func (x *GetContainerStatsResponse) GetNetOutput() uint64 {
	if x != nil {
		return x.NetOutput
	}
	return 0
}

type CreateContainerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image         string                 `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Cmd           []string               `protobuf:"bytes,3,rep,name=cmd,proto3" json:"cmd,omitempty"`
	Env           []string               `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty"`
	HostConfig    *HostConfig            `protobuf:"bytes,5,opt,name=host_config,json=hostConfig,proto3" json:"host_config,omitempty"`
	Networks      []string               `protobuf:"bytes,6,rep,name=networks,proto3" json:"networks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateContainerRequest) Reset() {
	*x = CreateContainerRequest{}
	mi := &file_proto_container_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContainerRequest) ProtoMessage() {}

func (x *CreateContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContainerRequest.ProtoReflect.Descriptor instead.
func (*CreateContainerRequest) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{11}
}

func (x *CreateContainerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateContainerRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CreateContainerRequest) GetCmd() []string {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *CreateContainerRequest) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *CreateContainerRequest) GetHostConfig() *HostConfig {
	if x != nil {
		return x.HostConfig
	}
	return nil
}

func (x *CreateContainerRequest) GetNetworks() []string {
	if x != nil {
		return x.Networks
	}
	return nil
}

type HostConfig struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	PortBindings  map[string]*PortBinding `protobuf:"bytes,1,rep,name=port_bindings,json=portBindings,proto3" json:"port_bindings,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RestartPolicy *RestartPolicy          `protobuf:"bytes,2,opt,name=restart_policy,json=restartPolicy,proto3" json:"restart_policy,omitempty"`
	AutoRemove    bool                    `protobuf:"varint,3,opt,name=auto_remove,json=autoRemove,proto3" json:"auto_remove,omitempty"`
	Mounts        []*Mount                `protobuf:"bytes,4,rep,name=mounts,proto3" json:"mounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostConfig) Reset() {
	*x = HostConfig{}
	mi := &file_proto_container_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostConfig) ProtoMessage() {}

func (x *HostConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostConfig.ProtoReflect.Descriptor instead.
func (*HostConfig) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{12}
}

func (x *HostConfig) GetPortBindings() map[string]*PortBinding {
	if x != nil {
		return x.PortBindings
	}
	return nil
}

func (x *HostConfig) GetRestartPolicy() *RestartPolicy {
	if x != nil {
		return x.RestartPolicy
	}
	return nil
}

func (x *HostConfig) GetAutoRemove() bool {
	if x != nil {
		return x.AutoRemove
	}
	return false
}

func (x *HostConfig) GetMounts() []*Mount {
	if x != nil {
		return x.Mounts
	}
	return nil
}

type PortBinding struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostPorts     []*PortMapping         `protobuf:"bytes,1,rep,name=host_ports,json=hostPorts,proto3" json:"host_ports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PortBinding) Reset() {
	*x = PortBinding{}
	mi := &file_proto_container_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortBinding) ProtoMessage() {}

func (x *PortBinding) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortBinding.ProtoReflect.Descriptor instead.
func (*PortBinding) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{13}
}

func (x *PortBinding) GetHostPorts() []*PortMapping {
	if x != nil {
		return x.HostPorts
	}
	return nil
}

type PortMapping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostIp        string                 `protobuf:"bytes,1,opt,name=host_ip,json=hostIp,proto3" json:"host_ip,omitempty"`
	HostPort      int32                  `protobuf:"varint,2,opt,name=host_port,json=hostPort,proto3" json:"host_port,omitempty"`
	ContainerPort int32                  `protobuf:"varint,3,opt,name=container_port,json=containerPort,proto3" json:"container_port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PortMapping) Reset() {
	*x = PortMapping{}
	mi := &file_proto_container_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortMapping) ProtoMessage() {}

func (x *PortMapping) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortMapping.ProtoReflect.Descriptor instead.
func (*PortMapping) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{14}
}

func (x *PortMapping) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *PortMapping) GetHostPort() int32 {
	if x != nil {
		return x.HostPort
	}
	return 0
}

func (x *PortMapping) GetContainerPort() int32 {
	if x != nil {
		return x.ContainerPort
	}
	return 0
}

type RestartPolicy struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Name              string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MaximumRetryCount int32                  `protobuf:"varint,2,opt,name=maximum_retry_count,json=maximumRetryCount,proto3" json:"maximum_retry_count,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RestartPolicy) Reset() {
	*x = RestartPolicy{}
	mi := &file_proto_container_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartPolicy) ProtoMessage() {}

func (x *RestartPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartPolicy.ProtoReflect.Descriptor instead.
func (*RestartPolicy) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{15}
}

func (x *RestartPolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RestartPolicy) GetMaximumRetryCount() int32 {
	if x != nil {
		return x.MaximumRetryCount
	}
	return 0
}

type Mount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Source        string                 `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Target        string                 `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	ReadOnly      bool                   `protobuf:"varint,3,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mount) Reset() {
	*x = Mount{}
	mi := &file_proto_container_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mount) ProtoMessage() {}

func (x *Mount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mount.ProtoReflect.Descriptor instead.
func (*Mount) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{16}
}

func (x *Mount) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Mount) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Mount) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

type CreateContainerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateContainerResponse) Reset() {
	*x = CreateContainerResponse{}
	mi := &file_proto_container_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContainerResponse) ProtoMessage() {}

func (x *CreateContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContainerResponse.ProtoReflect.Descriptor instead.
func (*CreateContainerResponse) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{17}
}

func (x *CreateContainerResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RemoveContainerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RemoveVolumes bool                   `protobuf:"varint,2,opt,name=remove_volumes,json=removeVolumes,proto3" json:"remove_volumes,omitempty"`
	Force         bool                   `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveContainerRequest) Reset() {
	*x = RemoveContainerRequest{}
	mi := &file_proto_container_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveContainerRequest) ProtoMessage() {}

func (x *RemoveContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveContainerRequest.ProtoReflect.Descriptor instead.
func (*RemoveContainerRequest) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{18}
}

func (x *RemoveContainerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RemoveContainerRequest) GetRemoveVolumes() bool {
	if x != nil {
		return x.RemoveVolumes
	}
	return false
}

func (x *RemoveContainerRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type RemoveContainerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveContainerResponse) Reset() {
	*x = RemoveContainerResponse{}
	mi := &file_proto_container_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveContainerResponse) ProtoMessage() {}

func (x *RemoveContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveContainerResponse.ProtoReflect.Descriptor instead.
func (*RemoveContainerResponse) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{19}
}

func (x *RemoveContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type StartContainerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartContainerRequest) Reset() {
	*x = StartContainerRequest{}
	mi := &file_proto_container_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartContainerRequest) ProtoMessage() {}

func (x *StartContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartContainerRequest.ProtoReflect.Descriptor instead.
func (*StartContainerRequest) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{20}
}

func (x *StartContainerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StartContainerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartContainerResponse) Reset() {
	*x = StartContainerResponse{}
	mi := &file_proto_container_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartContainerResponse) ProtoMessage() {}

func (x *StartContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartContainerResponse.ProtoReflect.Descriptor instead.
func (*StartContainerResponse) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{21}
}

func (x *StartContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type StopContainerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopContainerRequest) Reset() {
	*x = StopContainerRequest{}
	mi := &file_proto_container_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopContainerRequest) ProtoMessage() {}

func (x *StopContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopContainerRequest.ProtoReflect.Descriptor instead.
func (*StopContainerRequest) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{22}
}

func (x *StopContainerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StopContainerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopContainerResponse) Reset() {
	*x = StopContainerResponse{}
	mi := &file_proto_container_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopContainerResponse) ProtoMessage() {}

func (x *StopContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopContainerResponse.ProtoReflect.Descriptor instead.
func (*StopContainerResponse) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{23}
}

func (x *StopContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RestartContainerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartContainerRequest) Reset() {
	*x = RestartContainerRequest{}
	mi := &file_proto_container_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartContainerRequest) ProtoMessage() {}

func (x *RestartContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartContainerRequest.ProtoReflect.Descriptor instead.
func (*RestartContainerRequest) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{24}
}

func (x *RestartContainerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RestartContainerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartContainerResponse) Reset() {
	*x = RestartContainerResponse{}
	mi := &file_proto_container_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartContainerResponse) ProtoMessage() {}

func (x *RestartContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartContainerResponse.ProtoReflect.Descriptor instead.
func (*RestartContainerResponse) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{25}
}

func (x *RestartContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type PauseContainerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PauseContainerRequest) Reset() {
	*x = PauseContainerRequest{}
	mi := &file_proto_container_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseContainerRequest) ProtoMessage() {}

func (x *PauseContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseContainerRequest.ProtoReflect.Descriptor instead.
func (*PauseContainerRequest) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{26}
}

func (x *PauseContainerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PauseContainerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PauseContainerResponse) Reset() {
	*x = PauseContainerResponse{}
	mi := &file_proto_container_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseContainerResponse) ProtoMessage() {}

func (x *PauseContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseContainerResponse.ProtoReflect.Descriptor instead.
func (*PauseContainerResponse) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{27}
}

func (x *PauseContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UnpauseContainerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnpauseContainerRequest) Reset() {
	*x = UnpauseContainerRequest{}
	mi := &file_proto_container_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpauseContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpauseContainerRequest) ProtoMessage() {}

func (x *UnpauseContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpauseContainerRequest.ProtoReflect.Descriptor instead.
func (*UnpauseContainerRequest) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{28}
}

func (x *UnpauseContainerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UnpauseContainerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnpauseContainerResponse) Reset() {
	*x = UnpauseContainerResponse{}
	mi := &file_proto_container_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpauseContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpauseContainerResponse) ProtoMessage() {}

func (x *UnpauseContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpauseContainerResponse.ProtoReflect.Descriptor instead.
func (*UnpauseContainerResponse) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{29}
}

func (x *UnpauseContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type KillContainerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Signal        string                 `protobuf:"bytes,2,opt,name=signal,proto3" json:"signal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KillContainerRequest) Reset() {
	*x = KillContainerRequest{}
	mi := &file_proto_container_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KillContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillContainerRequest) ProtoMessage() {}

func (x *KillContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillContainerRequest.ProtoReflect.Descriptor instead.
func (*KillContainerRequest) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{30}
}

func (x *KillContainerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *KillContainerRequest) GetSignal() string {
	if x != nil {
		return x.Signal
	}
	return ""
}

type KillContainerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KillContainerResponse) Reset() {
	*x = KillContainerResponse{}
	mi := &file_proto_container_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KillContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillContainerResponse) ProtoMessage() {}

func (x *KillContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillContainerResponse.ProtoReflect.Descriptor instead.
func (*KillContainerResponse) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{31}
}

func (x *KillContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RenameContainerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenameContainerRequest) Reset() {
	*x = RenameContainerRequest{}
	mi := &file_proto_container_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenameContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameContainerRequest) ProtoMessage() {}

func (x *RenameContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameContainerRequest.ProtoReflect.Descriptor instead.
func (*RenameContainerRequest) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{32}
}

func (x *RenameContainerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RenameContainerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RenameContainerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenameContainerResponse) Reset() {
	*x = RenameContainerResponse{}
	mi := &file_proto_container_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenameContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameContainerResponse) ProtoMessage() {}

func (x *RenameContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameContainerResponse.ProtoReflect.Descriptor instead.
func (*RenameContainerResponse) Descriptor() ([]byte, []int) {
	return file_proto_container_proto_rawDescGZIP(), []int{33}
}

func (x *RenameContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_container_proto protoreflect.FileDescriptor

const file_proto_container_proto_rawDesc = "" +
	"\n" +
	"\x15proto/container.proto\x12\fcontainer.v1\">\n" +
	"\x14GetContainersRequest\x12\x10\n" +
	"\x03all\x18\x01 \x01(\bR\x03all\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\"\x96\x01\n" +
	"\x14GetContainerResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05names\x18\x02 \x03(\tR\x05names\x12\x14\n" +
	"\x05image\x18\x03 \x01(\tR\x05image\x12\x14\n" +
	"\x05state\x18\x04 \x01(\tR\x05state\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12\x14\n" +
	"\x05ports\x18\x06 \x03(\tR\x05ports\"[\n" +
	"\x15GetContainersResponse\x12B\n" +
	"\n" +
	"containers\x18\x01 \x03(\v2\".container.v1.GetContainerResponseR\n" +
	"containers\",\n" +
	"\x1aGetContainerDetailsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x82\x03\n" +
	"\x1bGetContainerDetailsResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\acreated\x18\x03 \x01(\tR\acreated\x12\x14\n" +
	"\x05image\x18\x04 \x01(\tR\x05image\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12\x14\n" +
	"\x05state\x18\x06 \x01(\tR\x05state\x120\n" +
	"\x06mounts\x18\a \x03(\v2\x18.container.v1.MountPointR\x06mounts\x12S\n" +
	"\bnetworks\x18\b \x03(\v27.container.v1.GetContainerDetailsResponse.NetworksEntryR\bnetworks\x1aZ\n" +
	"\rNetworksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.container.v1.NetworkSettingsR\x05value:\x028\x01\"V\n" +
	"\n" +
	"MountPoint\x12\x16\n" +
	"\x06source\x18\x01 \x01(\tR\x06source\x12 \n" +
	"\vdestination\x18\x02 \x01(\tR\vdestination\x12\x0e\n" +
	"\x02rw\x18\x03 \x01(\bR\x02rw\"i\n" +
	"\x0fNetworkSettings\x12\x1d\n" +
	"\n" +
	"network_id\x18\x01 \x01(\tR\tnetworkId\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x02 \x01(\tR\tipAddress\x12\x18\n" +
	"\agateway\x18\x03 \x01(\tR\agateway\"A\n" +
	"\x17GetContainerLogsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06follow\x18\x02 \x01(\bR\x06follow\"0\n" +
	"\x18GetContainerLogsResponse\x12\x14\n" +
	"\x05chunk\x18\x01 \x01(\fR\x05chunk\"B\n" +
	"\x18GetContainerStatsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06stream\x18\x02 \x01(\bR\x06stream\"\xbe\x01\n" +
	"\x19GetContainerStatsResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tcpu_usage\x18\x02 \x01(\x04R\bcpuUsage\x12\x1b\n" +
	"\tmem_usage\x18\x03 \x01(\x04R\bmemUsage\x12\x1b\n" +
	"\tmem_limit\x18\x04 \x01(\x04R\bmemLimit\x12\x1b\n" +
	"\tnet_input\x18\x05 \x01(\x04R\bnetInput\x12\x1d\n" +
	"\n" +
	"net_output\x18\x06 \x01(\x04R\tnetOutput\"\xbd\x01\n" +
	"\x16CreateContainerRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05image\x18\x02 \x01(\tR\x05image\x12\x10\n" +
	"\x03cmd\x18\x03 \x03(\tR\x03cmd\x12\x10\n" +
	"\x03env\x18\x04 \x03(\tR\x03env\x129\n" +
	"\vhost_config\x18\x05 \x01(\v2\x18.container.v1.HostConfigR\n" +
	"hostConfig\x12\x1a\n" +
	"\bnetworks\x18\x06 \x03(\tR\bnetworks\"\xcb\x02\n" +
	"\n" +
	"HostConfig\x12O\n" +
	"\rport_bindings\x18\x01 \x03(\v2*.container.v1.HostConfig.PortBindingsEntryR\fportBindings\x12B\n" +
	"\x0erestart_policy\x18\x02 \x01(\v2\x1b.container.v1.RestartPolicyR\rrestartPolicy\x12\x1f\n" +
	"\vauto_remove\x18\x03 \x01(\bR\n" +
	"autoRemove\x12+\n" +
	"\x06mounts\x18\x04 \x03(\v2\x13.container.v1.MountR\x06mounts\x1aZ\n" +
	"\x11PortBindingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.container.v1.PortBindingR\x05value:\x028\x01\"G\n" +
	"\vPortBinding\x128\n" +
	"\n" +
	"host_ports\x18\x01 \x03(\v2\x19.container.v1.PortMappingR\thostPorts\"j\n" +
	"\vPortMapping\x12\x17\n" +
	"\ahost_ip\x18\x01 \x01(\tR\x06hostIp\x12\x1b\n" +
	"\thost_port\x18\x02 \x01(\x05R\bhostPort\x12%\n" +
	"\x0econtainer_port\x18\x03 \x01(\x05R\rcontainerPort\"S\n" +
	"\rRestartPolicy\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12.\n" +
	"\x13maximum_retry_count\x18\x02 \x01(\x05R\x11maximumRetryCount\"T\n" +
	"\x05Mount\x12\x16\n" +
	"\x06source\x18\x01 \x01(\tR\x06source\x12\x16\n" +
	"\x06target\x18\x02 \x01(\tR\x06target\x12\x1b\n" +
	"\tread_only\x18\x03 \x01(\bR\breadOnly\")\n" +
	"\x17CreateContainerResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"e\n" +
	"\x16RemoveContainerRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12%\n" +
	"\x0eremove_volumes\x18\x02 \x01(\bR\rremoveVolumes\x12\x14\n" +
	"\x05force\x18\x03 \x01(\bR\x05force\"3\n" +
	"\x17RemoveContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"'\n" +
	"\x15StartContainerRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"2\n" +
	"\x16StartContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"&\n" +
	"\x14StopContainerRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"1\n" +
	"\x15StopContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\")\n" +
	"\x17RestartContainerRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"4\n" +
	"\x18RestartContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"'\n" +
	"\x15PauseContainerRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"2\n" +
	"\x16PauseContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\")\n" +
	"\x17UnpauseContainerRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"4\n" +
	"\x18UnpauseContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\">\n" +
	"\x14KillContainerRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06signal\x18\x02 \x01(\tR\x06signal\"1\n" +
	"\x15KillContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"<\n" +
	"\x16RenameContainerRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"3\n" +
	"\x17RenameContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\xf9\t\n" +
	"\x10ContainerService\x12X\n" +
	"\rGetContainers\x12\".container.v1.GetContainersRequest\x1a#.container.v1.GetContainersResponse\x12j\n" +
	"\x13GetContainerDetails\x12(.container.v1.GetContainerDetailsRequest\x1a).container.v1.GetContainerDetailsResponse\x12c\n" +
	"\x10GetContainerLogs\x12%.container.v1.GetContainerLogsRequest\x1a&.container.v1.GetContainerLogsResponse0\x01\x12f\n" +
	"\x11GetContainerStats\x12&.container.v1.GetContainerStatsRequest\x1a'.container.v1.GetContainerStatsResponse0\x01\x12^\n" +
	"\x0fCreateContainer\x12$.container.v1.CreateContainerRequest\x1a%.container.v1.CreateContainerResponse\x12^\n" +
	"\x0fRemoveContainer\x12$.container.v1.RemoveContainerRequest\x1a%.container.v1.RemoveContainerResponse\x12[\n" +
	"\x0eStartContainer\x12#.container.v1.StartContainerRequest\x1a$.container.v1.StartContainerResponse\x12X\n" +
	"\rStopContainer\x12\".container.v1.StopContainerRequest\x1a#.container.v1.StopContainerResponse\x12a\n" +
	"\x10RestartContainer\x12%.container.v1.RestartContainerRequest\x1a&.container.v1.RestartContainerResponse\x12[\n" +
	"\x0ePauseContainer\x12#.container.v1.PauseContainerRequest\x1a$.container.v1.PauseContainerResponse\x12a\n" +
	"\x10UnpauseContainer\x12%.container.v1.UnpauseContainerRequest\x1a&.container.v1.UnpauseContainerResponse\x12X\n" +
	"\rKillContainer\x12\".container.v1.KillContainerRequest\x1a#.container.v1.KillContainerResponse\x12^\n" +
	"\x0fRenameContainer\x12$.container.v1.RenameContainerRequest\x1a%.container.v1.RenameContainerResponseB\vZ\t./;protosb\x06proto3"

var (
	file_proto_container_proto_rawDescOnce sync.Once
	file_proto_container_proto_rawDescData []byte
)

func file_proto_container_proto_rawDescGZIP() []byte {
	file_proto_container_proto_rawDescOnce.Do(func() {
		file_proto_container_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_container_proto_rawDesc), len(file_proto_container_proto_rawDesc)))
	})
	return file_proto_container_proto_rawDescData
}

var file_proto_container_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_proto_container_proto_goTypes = []any{
	(*GetContainersRequest)(nil),        // 0: container.v1.GetContainersRequest
	(*GetContainerResponse)(nil),        // 1: container.v1.GetContainerResponse
	(*GetContainersResponse)(nil),       // 2: container.v1.GetContainersResponse
	(*GetContainerDetailsRequest)(nil),  // 3: container.v1.GetContainerDetailsRequest
	(*GetContainerDetailsResponse)(nil), // 4: container.v1.GetContainerDetailsResponse
	(*MountPoint)(nil),                  // 5: container.v1.MountPoint
	(*NetworkSettings)(nil),             // 6: container.v1.NetworkSettings
	(*GetContainerLogsRequest)(nil),     // 7: container.v1.GetContainerLogsRequest
	(*GetContainerLogsResponse)(nil),    // 8: container.v1.GetContainerLogsResponse
	(*GetContainerStatsRequest)(nil),    // 9: container.v1.GetContainerStatsRequest
	(*GetContainerStatsResponse)(nil),   // 10: container.v1.GetContainerStatsResponse
	(*CreateContainerRequest)(nil),      // 11: container.v1.CreateContainerRequest
	(*HostConfig)(nil),                  // 12: container.v1.HostConfig
	(*PortBinding)(nil),                 // 13: container.v1.PortBinding
	(*PortMapping)(nil),                 // 14: container.v1.PortMapping
	(*RestartPolicy)(nil),               // 15: container.v1.RestartPolicy
	(*Mount)(nil),                       // 16: container.v1.Mount
	(*CreateContainerResponse)(nil),     // 17: container.v1.CreateContainerResponse
	(*RemoveContainerRequest)(nil),      // 18: container.v1.RemoveContainerRequest
	(*RemoveContainerResponse)(nil),     // 19: container.v1.RemoveContainerResponse
	(*StartContainerRequest)(nil),       // 20: container.v1.StartContainerRequest
	(*StartContainerResponse)(nil),      // 21: container.v1.StartContainerResponse
	(*StopContainerRequest)(nil),        // 22: container.v1.StopContainerRequest
	(*StopContainerResponse)(nil),       // 23: container.v1.StopContainerResponse
	(*RestartContainerRequest)(nil),     // 24: container.v1.RestartContainerRequest
	(*RestartContainerResponse)(nil),    // 25: container.v1.RestartContainerResponse
	(*PauseContainerRequest)(nil),       // 26: container.v1.PauseContainerRequest
	(*PauseContainerResponse)(nil),      // 27: container.v1.PauseContainerResponse
	(*UnpauseContainerRequest)(nil),     // 28: container.v1.UnpauseContainerRequest
	(*UnpauseContainerResponse)(nil),    // 29: container.v1.UnpauseContainerResponse
	(*KillContainerRequest)(nil),        // 30: container.v1.KillContainerRequest
	(*KillContainerResponse)(nil),       // 31: container.v1.KillContainerResponse
	(*RenameContainerRequest)(nil),      // 32: container.v1.RenameContainerRequest
	(*RenameContainerResponse)(nil),     // 33: container.v1.RenameContainerResponse
	nil,                                 // 34: container.v1.GetContainerDetailsResponse.NetworksEntry
	nil,                                 // 35: container.v1.HostConfig.PortBindingsEntry
}
var file_proto_container_proto_depIdxs = []int32{
	1,  // 0: container.v1.GetContainersResponse.containers:type_name -> container.v1.GetContainerResponse
	5,  // 1: container.v1.GetContainerDetailsResponse.mounts:type_name -> container.v1.MountPoint
	34, // 2: container.v1.GetContainerDetailsResponse.networks:type_name -> container.v1.GetContainerDetailsResponse.NetworksEntry
	12, // 3: container.v1.CreateContainerRequest.host_config:type_name -> container.v1.HostConfig
	35, // 4: container.v1.HostConfig.port_bindings:type_name -> container.v1.HostConfig.PortBindingsEntry
	15, // 5: container.v1.HostConfig.restart_policy:type_name -> container.v1.RestartPolicy
	16, // 6: container.v1.HostConfig.mounts:type_name -> container.v1.Mount
	14, // 7: container.v1.PortBinding.host_ports:type_name -> container.v1.PortMapping
	6,  // 8: container.v1.GetContainerDetailsResponse.NetworksEntry.value:type_name -> container.v1.NetworkSettings
	13, // 9: container.v1.HostConfig.PortBindingsEntry.value:type_name -> container.v1.PortBinding
	0,  // 10: container.v1.ContainerService.GetContainers:input_type -> container.v1.GetContainersRequest
	3,  // 11: container.v1.ContainerService.GetContainerDetails:input_type -> container.v1.GetContainerDetailsRequest
	7,  // 12: container.v1.ContainerService.GetContainerLogs:input_type -> container.v1.GetContainerLogsRequest
	9,  // 13: container.v1.ContainerService.GetContainerStats:input_type -> container.v1.GetContainerStatsRequest
	11, // 14: container.v1.ContainerService.CreateContainer:input_type -> container.v1.CreateContainerRequest
	18, // 15: container.v1.ContainerService.RemoveContainer:input_type -> container.v1.RemoveContainerRequest
	20, // 16: container.v1.ContainerService.StartContainer:input_type -> container.v1.StartContainerRequest
	22, // 17: container.v1.ContainerService.StopContainer:input_type -> container.v1.StopContainerRequest
	24, // 18: container.v1.ContainerService.RestartContainer:input_type -> container.v1.RestartContainerRequest
	26, // 19: container.v1.ContainerService.PauseContainer:input_type -> container.v1.PauseContainerRequest
	28, // 20: container.v1.ContainerService.UnpauseContainer:input_type -> container.v1.UnpauseContainerRequest
	30, // 21: container.v1.ContainerService.KillContainer:input_type -> container.v1.KillContainerRequest
	32, // 22: container.v1.ContainerService.RenameContainer:input_type -> container.v1.RenameContainerRequest
	2,  // 23: container.v1.ContainerService.GetContainers:output_type -> container.v1.GetContainersResponse
	4,  // 24: container.v1.ContainerService.GetContainerDetails:output_type -> container.v1.GetContainerDetailsResponse
	8,  // 25: container.v1.ContainerService.GetContainerLogs:output_type -> container.v1.GetContainerLogsResponse
	10, // 26: container.v1.ContainerService.GetContainerStats:output_type -> container.v1.GetContainerStatsResponse
	17, // 27: container.v1.ContainerService.CreateContainer:output_type -> container.v1.CreateContainerResponse
	19, // 28: container.v1.ContainerService.RemoveContainer:output_type -> container.v1.RemoveContainerResponse
	21, // 29: container.v1.ContainerService.StartContainer:output_type -> container.v1.StartContainerResponse
	23, // 30: container.v1.ContainerService.StopContainer:output_type -> container.v1.StopContainerResponse
	25, // 31: container.v1.ContainerService.RestartContainer:output_type -> container.v1.RestartContainerResponse
	27, // 32: container.v1.ContainerService.PauseContainer:output_type -> container.v1.PauseContainerResponse
	29, // 33: container.v1.ContainerService.UnpauseContainer:output_type -> container.v1.UnpauseContainerResponse
	31, // 34: container.v1.ContainerService.KillContainer:output_type -> container.v1.KillContainerResponse
	33, // 35: container.v1.ContainerService.RenameContainer:output_type -> container.v1.RenameContainerResponse
	23, // [23:36] is the sub-list for method output_type
	10, // [10:23] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_container_proto_init() }
func file_proto_container_proto_init() {
	if File_proto_container_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_container_proto_rawDesc), len(file_proto_container_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_container_proto_goTypes,
		DependencyIndexes: file_proto_container_proto_depIdxs,
		MessageInfos:      file_proto_container_proto_msgTypes,
	}.Build()
	File_proto_container_proto = out.File
	file_proto_container_proto_goTypes = nil
	file_proto_container_proto_depIdxs = nil
}
