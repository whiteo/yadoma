syntax = "proto3";

package volume.v1;

option go_package = "./;protos";

message GetVolumesRequest {}

message Volume {
  string name = 1;
  string driver = 2;
  string mountpoint = 3;
  map<string, string> labels = 4;
}

message GetVolumesResponse {
  repeated Volume volumes = 1;
  repeated string warnings = 2;
}

message GetVolumeDetailsRequest {
  string id = 1;
}

message GetVolumeDetailsResponse {
  string name = 1;
  string driver = 2;
  string mountpoint = 3;
  string created_at = 4;
  string scope = 5;
  map<string, string> labels = 6;
}

message CreateVolumeRequest {
  string name = 1;
  string driver = 2;
  map<string, string> driver_opts = 3;
  map<string, string> labels = 4;
}

message CreateVolumeResponse {
  string name = 1;
  string driver = 2;
  string mountpoint = 3;
  string created_at = 4;
  string scope = 5;
  map<string, string> labels = 6;
}

message RemoveVolumeRequest {
  string id = 1;
  bool force = 2;
}

message RemoveVolumeResponse {
  bool success = 1;
}

message PruneVolumesRequest {
  string all = 1;
}

message PruneVolumesResponse {
  repeated string volumes_deleted = 1;
  uint64 space_reclaimed = 2;
}

service VolumeService {
  rpc GetVolumes(GetVolumesRequest) returns (GetVolumesResponse);
  rpc GetVolumeDetails(GetVolumeDetailsRequest) returns (GetVolumeDetailsResponse);
  rpc CreateVolume(CreateVolumeRequest) returns (CreateVolumeResponse);
  rpc RemoveVolume(RemoveVolumeRequest) returns (RemoveVolumeResponse);
  rpc PruneVolumes(PruneVolumesRequest) returns (PruneVolumesResponse);
}
