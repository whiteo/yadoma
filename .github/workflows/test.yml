name: Test PR

on:
  pull_request:
    branches:
      - main

concurrency:
  group: test-pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  test-agent:
    runs-on: ubuntu-latest
    name: Test Agent

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.25.x'
          check-latest: true

      - name: Setup protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: make install-deps

      - name: Generate protobuf files
        run: make generate

      - name: Run tests
        run: |
          cd agent
          go test -v -race -count=1 ./...

  test-webapp:
    runs-on: ubuntu-latest
    name: Test WebApp

    services:
      docker:
        image: docker:dind
        options: >-
          --privileged
          --dns 8.8.8.8
        ports:
          - 2375:2375

    env:
      DOCKER_HOST: tcp://localhost:2375
      DOCKER_TLS_VERIFY: 0
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs='-Xmx2g'"

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          java-version: '25'
          distribution: 'graalvm'
          cache: gradle

      - name: Setup protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('webapp/**/*.gradle*', 'webapp/**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x webapp/gradlew

      - name: Generate protobuf sources
        working-directory: webapp
        run: ./gradlew generateProto --no-daemon

      - name: Run integration tests
        working-directory: webapp
        run: |
          docker info
          ./gradlew clean test jacocoTestReport jacocoTestCoverageVerification --no-daemon --info

      - name: Upload JaCoCo coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v5
        with:
          files: webapp/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
